name: Build/Destroy gke Infrastructure

# trigger manually
on:
  workflow_dispatch:
    inputs:
      tf:
        description: "Build/Destroy"
        required: true
        default: "build"
        type: choice
        options:
          - build
          - destroy
      env:
        description: "Environment to Build/Destroy"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.0.0

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - id: init
        name: Terraform init
        run: |
          cd ./terraform
          terraform init -backend-config="prefix=terraform/state/${{ github.event.inputs.env }}"
        env:
          TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
          TF_VAR_region: ${{ secrets.REGION }}
          TF_VAR_client_id: ${{ secrets.CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.CLIENT_SECRET }}
          TF_VAR_env: ${{ github.event.inputs.env }}

      - id: run
        name: Terraform apply/destroy
        run: |
          cd ./terraform
          if [[ "${{ github.event.inputs.tf }}" == "build" ]]; then
              terraform apply -auto-approve -no-color
          elif [[ "${{ github.event.inputs.tf }}" == "destroy" ]]; then
              terraform destroy -auto-approve -no-color
          fi
        env:
          TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
          TF_VAR_region: ${{ secrets.REGION }}
          TF_VAR_client_id: ${{ secrets.CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.CLIENT_SECRET }}
          TF_VAR_env: ${{ github.event.inputs.env }}
